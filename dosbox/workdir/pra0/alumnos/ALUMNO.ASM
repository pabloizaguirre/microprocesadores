;******************************************************************************* 
; AUTHOR: PABLO IZAGUIRRE (PABLO.IZAGUIRRE@ESTUDIANTE.UAM.ES)
;
; THIS CODE ASKS FOR A NAME, A SURNAME AND A COUNTRY AND PRNTS ON THE SCREEN 
; A TEXT THAT INCLUDES THIS INFORMATION.
;*******************************************************************************

;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE DATOS
DATOS SEGMENT
	CLR_PANT 	DB 	1BH,"[2","J$"
	CUR_MICRO	DB 	1BH,"[4;27fTECNOLOGIA DE COMPUTADORES$"		; I ADDED THE CHARACTER [ SO THAT THE ANSII SCAPE CODE FUNCTIONS PROPERLY
	PREG_NOM 	DB 	1BH,"[10;1fWRITE YOUR NAME ? $"
	PREG_AP		DB 	1BH,"[12;1fWRITE YOUR SURNAME ? $"			; I ADDED AN ANSII CODE TO CHANGE THE POSITION OF THE CURSOR TO TWO LINES BELOW
	PREG_PAIS	DB 	1BH,"[14;1fWRITE YOUR COUNTRY ? $"			; I ADDED AN ANSII CODE TO CHANGE THE POSITION OF THE CURSOR TO TWO LINES BELOW AGAIN
	NOMBRE		DB 	80 DUP (0)
	APELLIDO	DB 	80 DUP (0)									; WE RESERVE 80 BYTES INITIALIZED TO 0
	PAIS 		DB 	80 DUP (0)
	TEXTO 		DB 	1BH,"[22;1f","$"
	TEXTO2		DB 	" (FROM ", "$"
	TEXTO3 		DB 	") IS COURSING SECOND COURSE OF "
			DB 	"COMPUTER SCIENCE",13,10,"$"					;13 es /r, 10 es /n
	TXTSPACE	DB 	" ", "$"
DATOS ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE PILA
PILA SEGMENT STACK "STACK"
	DB 40H DUP (0)
PILA ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE CODIGO
CODE SEGMENT
ASSUME CS:CODE,DS:DATOS,SS:PILA
; COMIENZO DEL PROCEDIMIENTO PRINCIPAL (START)
START PROC FAR
;INICIALIZACION DE LOS REGISTROS DE SEGMENTO
	MOV AX,DATOS
	MOV DS,AX	;FIN DE LAS INICIALIZACIONES
	
	MOV AH,9	; BORRA LA PANTALLA
	MOV DX, OFFSET CLR_PANT
	INT 21H
	
	MOV DX,OFFSET CUR_MICRO		;ESCRIBE "CURSO ...
	INT 21H

	; OBTAIN THE NAME:   
	MOV DX,OFFSET PREG_NOM		;PRINTS THE REQUEST FOR THE NAME
	INT 21H

	MOV AH,0AH					;FUNCTION THAT STORES THE WRITEN STRING
	MOV DX,OFFSET NOMBRE		;DX CONTAINS THE MEMORY POSITION WHERE THE WRITEN DATA MUST BE STORED
	
	MOV NOMBRE[0],60			;THE MAXIMUM AMMOUNT OF CHARACTERS MUST BE STORED IN THE FIRST BYTE
	INT 21H

	; OBTAIN THE SURNAME:
	MOV AH,9					;FUNCTION THAT ALLOWS TO PRINT A STRING
	MOV DX,OFFSET PREG_AP		;PRINTS THE REQUEST FOR THE SURNAME
	INT 21H
	
	MOV AH,0AH
	MOV DX, OFFSET APELLIDO		;DX CONTAINS THE MEMORY POSITION WHERE THE SURNAME HAS TO BE STORED

	MOV APELLIDO[0], 60			;THE SURNAME HAS TO HAVE LESS THAN 60 CHARACTERS
	INT 21H						;WE CALL THE SOFTWARE INTERRUPTION 21H AND THE FUNCTION 0AH IS EXECUTED, WHICH 
								;READS A LINE FROM THE KEYBOARD AND STORES IT IN THE MEMORY POSITION WHERE DX POINTS 
								;TO. THE LENGTH OF THE WRITTEN STRING WILL BE STORED IN THE SECOND BYTE
	
	; OBTAIN THE COUNTRY:
	MOV AH,9
	MOV DX, OFFSET PREG_PAIS	;PRINTS THE REQUEST FOR THE COUNTRY
	INT 21H
	
	MOV AH,0AH
	MOV DX, OFFSET PAIS			;DX CONTAINS THE MEMORY POSITION WHERE THE COUNTRY MUST BE STORED

	MOV PAIS[0], 60				;THE COUNTRY MUST HAVE LESS THAN 60 CHARACTERS
	INT 21H						;WE CALL THE SOFTWARE INTERRUPTION 21H

	; WRITE THE RESULT
	MOV AH,9					
	MOV DX, OFFSET TEXTO		;MOVES THE CURSOR TO THE CORRECT POSITION
	INT 21H

	MOV BX, OFFSET NOMBRE
	CALL WRITE					;PRINTS THE NAME

	MOV DX, OFFSET TXTSPACE		;PRINTS A SPACE
	INT 21H

	MOV BX, OFFSET APELLIDO		
	CALL WRITE 					;PRINTS THE SURNAME

	MOV DX, OFFSET TEXTO2		;PRINTS "(FROM "
	INT 21H
	
	MOV BX, OFFSET PAIS
	CALL WRITE					;PRINTS THE COUNTRY

	MOV DX, OFFSET TEXTO3		;PRINTS ") IS COURSING..."
	INT 21H


 	MOV AX,4C00H			; FIN DE PROGRAMA Y VUELTA AL DOS
 	INT 21H
 START ENDP

;_______________________________________________________________ 
; SUBRUTINA PARA ESCRIBIR POR PANTALLA UN TEXTO
; ENTRADA BX=POSICION EN MEMORIA DEL TEXTO 
; ESTA FUNCION UTILIZA AH, DX Y CL
;_______________________________________________________________ 

WRITE PROC NEAR 
	MOV DX, BX				; GUARDO EL VALOR INICIAL DE BX EN DX
	ADD BX, 1				; BX APUNTA AHORA A DONDE ESTA GUARDADA EN MEMORIA LA LONGITUD DEL TEXTO
	MOV CL, [BX]			; EN CL ESTA LA LONGITUD DEL TEXTO
	ADD BX, CX				; BX APUNTA A DONDE ESTA EN MEMORIA EL ULTIMO CARACTER DEL TEXTO
	ADD BX, 1
	MOV BYTE PTR [BX], '$'	; SE ESCRIBE DESPUES DEL ULTIMO CARACTER UN $ (QUE EN ASCII ES EL 36)
							; USO BYTE PTR PARA INDICAR QUE SOLO SE QUIERE MOVER UN BYTE

	; AHORA SE ESCRIBE EL TEXTO
	ADD DX, 2				; SE AVANZA DX HASTA LA POSICION DEL PRIMER CARACTER DEL TEXTO 
	MOV AH,9				; ESTA OPERACION ESCRIBE UN STRING TERMINADO EN $ EN PANTALLA
	INT 21H					; SE LLAMA A LA INTERRUPCION 21H
	RET

WRITE ENDP 

;FIN DEL SEGMENTO DE CODIGO
CODE ENDS
;FIN DE PROGRAMA INDICANDO DONDE COMIENZA LA EJECUCION
END START

